#!/usr/bin/env sh
# Compiles and runs the n-body proxy application.
#
# ./run <toolchain> <algorithm> <workload case> <dim> <precision> <bodies> <steps> <sequential> <profiler>
#
# Examples:
# ./run nvgpu galaxy barnes-hut
# ./run nvgpu solar all-pairs 2 double
# BUILD=1 ./run nvgpu galaxy barnes-hut
# RUN=1 ./run nvgpu galaxy barnes-hut
set -ex
BODIES=100000
if [ ! -z $6 ]; then
    BODIES=$6
fi

STEPS=1000
if [ ! -z $7 ]; then
    STEPS=$7
fi

DIM=3
if [ ! -z $4 ]; then
    DIM=$4
fi

PREC=float
if [ ! -z $5 ]; then
    PREC=$5
fi

SEQUENTIAL=0
if [ ! -z $8 ]; then
    SEQUENTIAL=1
fi

PROFILER=0
if [ ! -z $9 ]; then
    PROFILER=1
fi

BUILD=1
RUN=1
if [ ! -z $RUN_ONLY ]; then
    if [ $RUN_ONLY = "1" ]; then
	BUILD=0
    fi
fi
if [ ! -z $BUILD_ONLY ]; then
    if [ $BUILD_ONLY = "1" ]; then
	RUN=0
    fi
fi
BIN="nbody_${1}_${DIM}"
if [ ! -f ${BIN} ]; then
    # Build binary if it does not exist
    BUILD=1
fi

if [ $SEQUENTIAL = "1" ]; then
    BIN="${BIN}_seq"
    CXXFLAGS="-DSEQUENTIAL"
fi

# Build the binary
if [ $BUILD = "1" ]; then
  # Build options for all compilers (portable standard compilation options):
  CXXFLAGS="${CXXFLAGS} -Ofast -DNDEBUG -std=c++23 -mcpu=native -Wall -Wextra -Iinclude -DDIM_SIZE=${DIM} -o ${BIN}"
  case $1 in
    nvgpu)
	nvc++ ${CXXFLAGS} -stdpar=gpu -gpu=ccnative --diag_suppress no_device_stack src/main.cpp
	;;
    nvcpu)
	nvc++ ${CXXFLAGS} -stdpar=multicore src/main.cpp
	;;
    gcc)
	g++ ${CXXFLAGS} src/main.cpp -ltbb
	;;
    clang)
	clang++ ${CXXFLAGS} src/main.cpp -ltbb
	;;
    acpp)
	acpp ${CXXFLAGS} --acpp-stdpar src/main.cpp -ltbb
	;;
    *)
	echo "error: unknown compiler toolchain ${1}"
	echo "options are: nvgpu, nvcpu, gcc, clang, acpp"
	exit 1
	;;
  esac
fi

# Run the binary:
if [ $RUN = "1" ]; then
  SAVE="--save pos"
  if [ ! -z $NO_SAVE ]; then
      if [ $NO_SAVE = "1" ]; then
	  SAVE="--save none --csv-total"
      elif [ $NO_SAVE = "2" ]; then
	  SAVE="--save none --csv-detailed"
      fi
  fi

  PROFILER_CMD=""
  if [ $PROFILER = "1" ]; then
      PROFILER_CMD="nsys profile --trace=nvtx,cuda,osrt --force-overwrite=true -o report.nsys-rep "
  fi

  OMP_PLACES=cores OMP_PROC_BIND=close $PROFILER_CMD \
    ./${BIN} -s $STEPS -n $BODIES ${SAVE} \
    --algorithm ${2} \
    --workload ${3} \
    --precision ${PREC} #--print-info

  PRINT="1"
  if [ ! -z $NO_PRINT ]; then
      if [ $NO_PRINT = "1" ]; then
	  PRINT="0"
      fi
  fi
  if [ $PRINT = "1" ]; then
      python3 scripts/plotter.py pos --${3} --gif
      mv nbody_animation.gif nbody_${2}_${3}_${PREC}.gif
  fi
fi
